version: '3'

services:
  konga:
    image: pantsel/konga:next
    restart: unless-stopped
    environment:
      DB_ADAPTER: postgres
      DB_HOST: db
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: konga_db
      TOKEN_SECRET: km1GUr4RkcQD7DewhJPNXrCuZwcKmqjb
      NODE_ENV: production
    depends_on:
      - konga_init
      - gateway
    ports:
      - "127.0.0.1:1337:1337"  
      
  konga_init:
    image: pantsel/konga:next
    command: "-c prepare -a postgres -u postgresql://kong:kong@db:5432/konga_db"
    restart: on-failure
    links:
      - db
    depends_on:
      - db

  gateway:
    image: kong
    restart: unless-stopped
    environment:
      KONG_PG_HOST: db
      KONG_PG_PASSWORD: kong
      KONG_PG_USER: kong
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - migrations
      - db
    ports:
      - "127.0.0.1:8001:8001"
      - "127.0.0.1:8000:8000"
      - "127.0.0.1:8443:8443"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8001" ]
      interval: 5s
      timeout: 2s
      retries: 15

  migrations:
    image: kong
    command: "kong migrations bootstrap"
    restart: on-failure
    environment:
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    links:
      - db
    depends_on:
      - db
  
  db:
    image: postgres:9.6
    restart: unless-stopped
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "kong" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data
    
volumes:
  db-data:
